/*******************************************************************************
 *      File Name: main.cpp                                               
 *         Author: Hui Chen. (c) 2015                             
 *           Mail: chenhui13@baidu.com                                        
 *   Created Time: 2015/07/31-15:39                                    
 *	Modified Time: 2015/07/31-15:39                                    
 *******************************************************************************/
#include <iostream>
#include <fstream>
#include <vector>
#include <string>
#include <stdlib.h>
#include <string.h>
using namespace std;
const char filename[] = "a.in";
const char tableDefFile[] = "TableDef.txt";

//------------------------------------------------------------------------------
class UDT
{
        public:
                virtual int parser()=0;
        private:
                int ele_num;
                std::vector<string> elements;
};
//------------------------------------------------------------------------------

class TableDef
{
        public:
                TableDef()
                {
                        columns.empty();
                }
                ~TableDef()
                {
                }

                int getTableDef();
                int getColCount();
                int parse();
                int getType(int i,string sub);
        private:
                //int col_num;
                std::vector<string> columns; 
};

int TableDef::getTableDef()
{
        ifstream in(tableDefFile);
        for (string str; getline(in, str); )
        {
                cout<<str<<endl;
                columns.push_back(str);
        }
}
int TableDef::getColCount()
{
        return columns.size();
}

int TableDef::getType(int i,string sub)
{
        //TODO- use switch
        string str=columns[i];
        if(!str.compare("int"))
        {
                //return string("%d");
                int temp = atoi(sub.c_str());
                printf("column %d is int:%d; ",i,temp);
        }
        else if(!str.compare("float"))
        {
                //return string("%d");
                double temp = atof(sub.c_str());
                printf("column %d is float:%f; ",i,temp);
        }
        else if(!str.compare("char*"))
        {
                //return string("%d");
                printf("column %d is string:%s; ",i,sub.c_str());
        }
        else
        {
                printf("other user defined type.");
        }
}

//------------------------------------------------------------------------------
int main(){
        //ifstream in(filename);
        //ofstream out("a.out");
        TableDef table_def;
        table_def.getTableDef();
        // the fengefu  of the sub-string
        char tab = ' ';
        ifstream in(filename);
        for (string str; getline(in, str); )
        {
                cout<<str<<endl;
                for(int j=0;j<str.length();j++)
                {
                        printf("array %d:%x\n",j,str.c_str()[j]);
                }
                unsigned int start=0;
                unsigned int loc = 0;
                int i=0;
                for (;i<table_def.getColCount();i++)
                {
                        if (i==table_def.getColCount()-1)
                                loc = str.length();
                        else
                                loc = str.find(tab, start );
                        if( loc != string::npos )
                        {
                                string sub = str.substr(start,loc-start);
                                cout <<start<<" "<<loc<<" Found sub string " << sub << endl;
                                while(str.c_str()[loc]==' ')
                                {
                                        loc++;
                                }
                                start = loc;
                                table_def.getType(i,sub);
                                //printf("the type of this word is %s\n",type.c_str() );
                                //cout << "Found Omega at " << loc << endl;
                        }
                        else
                        {
                                cout << "Didn't find sub" << endl;
                        }
                        cout<<endl;
                }
        }

}
//-------------------------------------------------------------------------------

